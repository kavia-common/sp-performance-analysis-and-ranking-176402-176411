{"is_source_file": true, "format": "Python", "description": "This script provides a utility function to generate an Excel file from a list of dictionary items, with customizable sheet name, and returns the file as bytes. It uses the openpyxl library to create and format the Excel workbook.", "external_files": ["openpyxl.workbook", "openpyxl.utils", "io.BytesIO"], "external_methods": ["openpyxl.Workbook", "openpyxl.utils.get_column_letter"], "published": ["build_excel_from_items"], "classes": [], "methods": [{"name": "bytes build_excel_from_items(items: Iterable[Dict[str, Any]], sheet_name: str = \"Rankings\")", "description": "Creates an Excel workbook from a list of dictionary items, sets the sheet name, writes headers and data, auto-adjusts column widths, and returns the Excel file as bytes.", "scope": "", "scopeKind": ""}], "calls": ["Workbook()", "get_column_letter()", "wb.save()"], "search-terms": ["excel export", "create Excel from dict list", "Workbook", "auto width excel columns", "BytesIO Excel bytes"], "state": 2, "file_id": 31, "knowledge_revision": 66, "git_revision": "", "ctags": [{"_type": "tag", "name": "build_excel_from_items", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/utils/excel_export.py", "pattern": "/^def build_excel_from_items(items: Iterable[Dict[str, Any]], sheet_name: str = \"Rankings\") -> byt/", "language": "Python", "typeref": "typename:bytes", "kind": "function", "signature": "(items: Iterable[Dict[str, Any]], sheet_name: str = \"Rankings\")"}], "hash": "d4f553130b0f9e2c669269a94f7b0f6b", "format-version": 4, "code-base-name": "sp_ranking_frontend", "filename": "sp_ranking_backend/src/utils/excel_export.py", "revision_history": [{"66": ""}]}