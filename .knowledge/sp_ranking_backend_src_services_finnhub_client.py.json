{"is_source_file": true, "format": "Python", "description": "This Python source file defines a client for interacting with the Finnhub API, including rate limiting, caching financial data into SQLite, and retrieving stock quotes, company profiles, financials, and metrics.", "external_files": ["../config", "../db"], "external_methods": ["settings.FINNHUB_API_KEY", "get_db"], "published": ["RateLimiter", "FinnhubClient"], "classes": [{"name": "RateLimiter", "description": "Implements a simple token-bucket style rate limiter to prevent exceeding API rate limits."}, {"name": "FinnhubClient", "description": "Client class for accessing Finnhub stock data API with caching and rate limiting."}], "methods": [{"name": "__init__(self, api_key: Optional[str] = None)", "description": "Initializes the FinnhubClient with API key, rate limiter, and HTTP client.", "scope": "FinnhubClient", "scopeKind": "class"}, {"name": "Any _get(self, path: str, params: Dict[str, Any])", "description": "Internal method for sending GET requests to Finnhub API with retries and error handling.", "scope": "FinnhubClient", "scopeKind": "class"}, {"name": "Optional[Dict[str,Any]] get_symbol_quote(self, symbol: str)", "description": "Fetches latest stock quote for a given symbol.", "scope": "FinnhubClient", "scopeKind": "class"}, {"name": "Optional[Dict[str,Any]] get_company_profile(self, symbol: str)", "description": "Retrieves company profile information for a given stock symbol.", "scope": "FinnhubClient", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] get_financials(self, symbol: str, period: str = \"annual\")", "description": "Fetches financial reports for a stock symbol and caches them into SQLite.", "scope": "FinnhubClient", "scopeKind": "class"}, {"name": "Dict[str,Optional[float]] get_key_metrics(self, symbol: str)", "description": "Retrieves key financial metrics for a stock symbol and caches them.", "scope": "FinnhubClient", "scopeKind": "class"}, {"name": "bool _cache_financial_exists(self, db: aiosqlite.Connection, symbol: str, period: str, fiscal_date: str)", "description": "Checks if financial data for specific symbol, period, and date already exists in cache.", "scope": "FinnhubClient", "scopeKind": "class"}, {"name": "_ensure_cache_tables(self)", "description": "Ensures that cache tables exist in the SQLite database.", "scope": "FinnhubClient", "scopeKind": "class"}, {"name": "aclose(self)", "description": "Closes the HTTP client.", "scope": "FinnhubClient", "scopeKind": "class"}, {"name": "__init__(self, rate_per_sec: float = 4.0)", "scope": "RateLimiter", "scopeKind": "class", "description": "unavailable"}, {"name": "wait(self)", "scope": "RateLimiter", "scopeKind": "class", "description": "unavailable"}], "calls": ["time.monotonic", "asyncio.sleep", "resp.raise_for_status", "resp.json", "json.loads", "get_db", "self._client.get", "self._limiter.wait", "db.execute", "db.commit", "db.execute", "db.execute", "db.execute", "db.execute", "db.execute", "db.execute"], "search-terms": ["Finnhub API", "rate limiting", "financial data caching", "stock quote retrieval", "company profile fetch", "financial reports SQLite cache", "async HTTP client"], "state": 2, "file_id": 29, "knowledge_revision": 61, "git_revision": "", "ctags": [{"_type": "tag", "name": "BASE_URL", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/services/finnhub_client.py", "pattern": "/^BASE_URL = \"https:\\/\\/finnhub.io\\/api\\/v1\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "FinnhubClient", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/services/finnhub_client.py", "pattern": "/^class FinnhubClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "RateLimiter", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/services/finnhub_client.py", "pattern": "/^class RateLimiter:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/services/finnhub_client.py", "pattern": "/^    def __init__(self, api_key: Optional[str] = None):$/", "language": "Python", "kind": "member", "signature": "(self, api_key: Optional[str] = None)", "scope": "FinnhubClient", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/services/finnhub_client.py", "pattern": "/^    def __init__(self, rate_per_sec: float = 4.0):$/", "language": "Python", "kind": "member", "signature": "(self, rate_per_sec: float = 4.0)", "scope": "RateLimiter", "scopeKind": "class"}, {"_type": "tag", "name": "_cache_financial_exists", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/services/finnhub_client.py", "pattern": "/^    async def _cache_financial_exists(self, db: aiosqlite.Connection, symbol: str, period: str, /", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, db: aiosqlite.Connection, symbol: str, period: str, fiscal_date: str)", "scope": "FinnhubClient", "scopeKind": "class"}, {"_type": "tag", "name": "_ensure_cache_tables", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/services/finnhub_client.py", "pattern": "/^    async def _ensure_cache_tables(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "FinnhubClient", "scopeKind": "class"}, {"_type": "tag", "name": "_get", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/services/finnhub_client.py", "pattern": "/^    async def _get(self, path: str, params: Dict[str, Any]) -> Any:$/", "language": "Python", "typeref": "typename:Any", "kind": "member", "signature": "(self, path: str, params: Dict[str, Any])", "scope": "FinnhubClient", "scopeKind": "class"}, {"_type": "tag", "name": "aclose", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/services/finnhub_client.py", "pattern": "/^    async def aclose(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "FinnhubClient", "scopeKind": "class"}, {"_type": "tag", "name": "get_company_profile", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/services/finnhub_client.py", "pattern": "/^    async def get_company_profile(self, symbol: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "member", "signature": "(self, symbol: str)", "scope": "FinnhubClient", "scopeKind": "class"}, {"_type": "tag", "name": "get_financials", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/services/finnhub_client.py", "pattern": "/^    async def get_financials(self, symbol: str, period: str = \"annual\") -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self, symbol: str, period: str = \"annual\")", "scope": "FinnhubClient", "scopeKind": "class"}, {"_type": "tag", "name": "get_key_metrics", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/services/finnhub_client.py", "pattern": "/^    async def get_key_metrics(self, symbol: str) -> Dict[str, Optional[float]]:$/", "language": "Python", "typeref": "typename:Dict[str,Optional[float]]", "kind": "member", "signature": "(self, symbol: str)", "scope": "FinnhubClient", "scopeKind": "class"}, {"_type": "tag", "name": "get_symbol_quote", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/services/finnhub_client.py", "pattern": "/^    async def get_symbol_quote(self, symbol: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "member", "signature": "(self, symbol: str)", "scope": "FinnhubClient", "scopeKind": "class"}, {"_type": "tag", "name": "wait", "path": "/home/kavia/workspace/code-generation/sp-performance-analysis-and-ranking-176402-176411/sp_ranking_backend/src/services/finnhub_client.py", "pattern": "/^    async def wait(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RateLimiter", "scopeKind": "class"}], "hash": "79a4f80e306e4f94bdf6d2a05cb865b0", "format-version": 4, "code-base-name": "sp_ranking_frontend", "filename": "sp_ranking_backend/src/services/finnhub_client.py", "fields": [{"name": "BASE_URL = \"https:\\/\\/finnhub.io\\/api\\/v1\"", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"61": ""}]}